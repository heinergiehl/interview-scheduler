# .github/workflows/ci-cd.yml
name: CI/CD â€“ Interview Scheduler
on:
  push:
    branches: [master]
jobs:
  build:
    name: Build assets
    runs-on: ubuntu-latest
    steps:
      # 1) Checkout
      - uses: actions/checkout@v3
      # 2) PHP 8.2 + extensions
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_sqlite, xml, curl, zip
          ini-values: post_max_size=256M, upload_max_filesize=256M
      # 3) Composer deps
      - name: Install PHP dependencies
        run: composer install --no-dev --prefer-dist --optimize-autoloader
      # 4) Node 20 + npm deps + build
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install JS dependencies & build
        run: |
          npm i
          npm run build
  deploy:
    name: Deploy to VPS
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      # 1) Checkout full history
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # 2) Load SSH key into the agent
      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      # 3) Ensure the remote dir exists & is owned by your deploy user
      - name: Prepare remote folder
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
            "sudo mkdir -p /var/www/myapps/interview-scheduler && sudo chown ${{ secrets.VPS_USER }}:${{ secrets.VPS_USER }} /var/www/myapps/interview-scheduler"
      # 4) Sync all files (excluding .git) up to the server
      - name: Sync code to VPS
        run: |
          rsync -avz --delete --exclude='.git' ./ \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/var/www/myapps/interview-scheduler
      # 5) SSH in and run your deploy commands
      - name: Run remote deploy commands
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            set -e
            cd /var/www/myapps/interview-scheduler
            # A) Shared .env (first run only)
            mkdir -p shared
            if [ ! -f shared/.env ]; then
              cp .env.example shared/.env
              echo "ðŸ‘‰  Please populate shared/.env with production secrets"
            fi
            ln -sf shared/.env .env
            # B) (optional) Bring up your DB container
            # docker compose up -d db
            # C) Install & build on the server
            composer install --no-dev --optimize-autoloader
            npm i
            npm run build
            # D) Migrate & cache
            #php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            # E) Reload PHP-FPM & Nginx
            sudo systemctl reload php8.2-fpm
            sudo systemctl reload nginx
          EOF

# .github/workflows/ci-cd.yml
#
#  • Builds assets on every push to master
#  • Deploys to your VPS if the build succeeded
#
name: CI/CD – InterviewScheduler
on:
  push:
    branches: [master]
# ─────────────────────────────────────────────────────
# 1) BUILD JOB  ───────────────────────────────────────
# ─────────────────────────────────────────────────────
jobs:
  build:
    name: Build assets
    runs-on: ubuntu-latest
    steps:
      # 1.1 Checkout code
      - uses: actions/checkout@v3
      # 1.2 PHP 8.2 + common extensions
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo_sqlite, xml, curl, zip
          coverage: none
          ini-values: post_max_size=256M, upload_max_filesize=256M
      # 1.3 Install Composer deps (no-dev, optimised autoloader)
      - name: Install PHP dependencies
        run: composer install --no-dev --prefer-dist --optimize-autoloader
      # 1.4 Node 20 → install + build (npm i preferred – npm ci caused issues)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm
      - name: Install JS dependencies & build
        run: |
          npm i
          npm run build
# ─────────────────────────────────────────────────────
# 2) DEPLOY JOB  ──────────────────────────────────────
# ─────────────────────────────────────────────────────
  deploy:
    name: Deploy to VPS
    needs: build
    runs-on: ubuntu-latest
    # deploy only on direct pushes to master
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      # 2.1 Checkout full history (for rsync --delete to work properly)
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # 2.2 Start SSH agent & add private key
      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      # 2.3 Make sure the target directory exists and is writable
      - name: Prepare remote folder
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
            "sudo mkdir -p /var/www/myapps/interview-scheduler && sudo chown ${{ secrets.VPS_USER }}:${{ secrets.VPS_USER }} /var/www/myapps/interview-scheduler"
      # 2.4 Rsync code (fast incremental upload, excludes .git)
      - name: Sync code to VPS
        run: |
          rsync -az --delete --exclude='.git' ./ \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/var/www/myapps/interview-scheduler
      # 2.5 Upload production .env (multiline secret)
      - name: Upload .env
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
          "printf '%s\n' '${{ secrets.PROD_ENV_FILE }}' > /var/www/myapps/interview-scheduler/.env"
      # 2.6 Run deploy commands on the server
      - name: Run remote deploy commands
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} <<'EOF'
            set -e
            cd /var/www/myapps/interview-scheduler
            # PHP dependencies (already cached on build runner, but run anyway in case of server-specific optimisations)
            composer install --no-dev --optimize-autoloader --no-interaction
            # JS deps & build (npm i instead of ci)
            npm i 
            npm run build
            # Laravel housekeeping
            #php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize:clear
            # Reload PHP-FPM & Nginx
            sudo systemctl reload php8.2-fpm
            sudo systemctl reload nginx
          EOF
